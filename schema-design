This document should be about the full schema, but it's initial purpose is to
document the changes needed to implement stages in tournaments.  Over time,
maybe we can improve it to be more comprehensive and remove this caveat.

The tomas system is designed to be a web site that can hold the results of
several mahjong tournaments.  The tournaments are managed by a collection of
users/organizers.  User accounts are represented by a row in the Users table.
The email and password hash are used to authenticate users.  Certain users
can be designated as admins by entering a record in the Admins table.

    'Users': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "Email TEXT NOT NULL",
        "Password TEXT NOT NULL",
        "UNIQUE(Email)"
    ],
    'Admins': [
        "Id INTEGER PRIMARY KEY NOT NULL",
        "FOREIGN KEY(Id) REFERENCES Users(Id) ON DELETE CASCADE"
    ],

Each tournament is an event where a group of players will play multiple
games of mahjong.  The Tournaments table holds the general attributes of
the tournament including it's name, the dates it is being held, the location,
and the User account that "owns" (manages) the tournament.  The logo and
LinkURL fields are planned for future use to link tomas to other sites.

    'Tournaments': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "Name TEXT",
        "Owner INTEGER",
        "Start DATE DEFAULT CURRENT_DATE",
        "End DATE DEFAULT CURRENT_DATE",
        "Location TEXT",
        "Country INTEGER",
        "Logo TEXT",
        "LinkURL TEXT",
        "FOREIGN KEY(Owner) REFERENCES Users(Id) ON DELETE CASCADE",
        "FOREIGN KEY(Country) REFERENCES Countries(Id) ON DELETE CASCADE"
    ],

Each tournament is grouped into stages - a series of games played where scores
accumulate to determine rankings of the players.  Typically there are round
robin stages followed by knock-out stages.  Each stage is 1 or more rounds with
identical characteristics for how players are seated and perhaps ranked.  These
are represented by a record in the Rounds table whose Games field indicates
how many games/rounds are played.  It's a little confusing to have a Rounds
table where each record corresponds to multiplt rounds in the tournament; this
is a historical artifact from when there was 1 round reecord per round and
all of the rounds had to be entered individually.

The rounds of a tournament are sequentially numbered, starting with 1.  The
Rounds record has a FirstNumber field that represents the first round number
where it applies.  It should always be the case that

  RoundRec[i][FirstNumber] + RoundRec[i][Games] = RoundRec[i+1][FirstNumber]

for 2 consecutive rounds in a tournament.  The RoundRec IDs may not be
consecutive as in i, and i+1.  The order of the rounds can be determined
by sorting on FirstNumber.

Each stage of the tournment contains 1 or more Rounds.  They are sequenced
by the Number field.  The rounds have a name which is typically "Round N"
where N is the number, but can be edited by the tournament manager/owner.

    'Rounds': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "Stage INTEGER",
        "Number INTEGER",
	"Name TEXT",
        "Ordering INTEGER",
        "Algorithm INTEGER",
        "Seed TEXT DEFAULT ''",
        "Cut TINYINT DEFAULT 0",
        "SoftCut TINYINT DEFAULT 0",
        "CutMobility TINYINT DEFAULT 0",
        "CombineLastCut TINYINT DEFAULT 0",
        "CutSize INTEGER DEFAULT NULL",
        "Duplicates TINYINT DEFAULT 1",
        "Diversity TINYINT DEFAULT 1",
        "UsePools TINYINT DEFAULT 1",
        "Winds TINYINT DEFAULT 1",
        "Games INTEGER DEFAULT 1",
        "FOREIGN KEY(Stage) REFERENCES Stages(Id) ON DELETE CASCADE"
    ],

Deciding who sits at what table in each round is complex and depends
on many variables stored in the Rounds record.

Players are associated with a tournament.  Players that play in multiple
tournaments must be represented in separate records in the Players table.

    'Players': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "Tournament INTEGER",
        "Name TEXT NOT NULL",
        "Number INTEGER",
        "Country INTEGER",
        "Association TEXT",
        "Pool TEXT",
        "Wheel TINYINT DEFAULT 0",
        "Type TINYINT DEFAULT 0",
        "FOREIGN KEY(Tournament) REFERENCES Tournaments(Id) ON DELETE CASCADE",
        "FOREIGN KEY(Country) REFERENCES Countries(Id) ON DELETE CASCADE",
        "CONSTRAINT NumberInTournament UNIQUE(Number, Tournament)"
    ],

Each player's Country, Association, and Pool are used to ensure diversity at
each table of a round.  The Number of a player is a unique number per
tournament that is used in seating arrangements based on sequence.  The Type
of the player is their role in the tournament.  They can either be active,
inactive, or a substititue player.  One record in the Players table is
reserved to represent the "unused points player".  This makes it convenient
to assign point sticks that were not awarded to any player in a game to the
unused points player.

Each player's seat in a particular round is determined by a record in the
Seating table.  The player is assigned to a particular table (TableNum) and
seat (Wind) for that Round.  (The Tournament field is redundant since the
round has to be part of a stage that is part of a Tournament; can it be
removed?).

    'Seating': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "Round INTEGER",
        "Tournament INTEGER",
        "Player INTEGER",
        "TableNum INTEGER",
        "Wind TINYINT",
        "FOREIGN KEY(Tournament) REFERENCES Tournaments(Id) ON DELETE CASCADE",
        "FOREIGN KEY(Player) REFERENCES Players(Id) ON DELETE CASCADE",
        "FOREIGN KEY(Round) REFERENCES Rounds(Id) ON DELETE CASCADE"
    ],

Scores are kept in the Scores table.  There is one row for each player in
each round.  When the RawScores for all the players at a table are filled in,
the final Score for each player can be determined by computing the player's
Rank and applying the uma's (bonuses) based on the rank.

    'Scores': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "GameId INTEGER",
        "Round INTEGER",
        "PlayerId INTEGER",
        "Rank TINYINT",
        "RawScore INTEGER",
        "Score REAL",
        "FOREIGN KEY(Round) REFERENCES Rounds(Id) ON DELETE CASCADE",
        "FOREIGN KEY(PlayerId) REFERENCES Players(Id) ON DELETE CASCADE",
        "CONSTRAINT OneScorePerPlayerPerGame UNIQUE (Round, GameId, PlayerId)"
    ],

Players can be penalized by referees for various infractions such as
committing a chombo (error) during play, showing up late to play, etc.
Each penalty record points to a specifict score record (which is part of
a particular round in a particular stage in a particular tournament).
Penalties can change the rankings of players at a table and hence the
uma's they receive.

    'Penalties': [
        "Id INTEGER PRIMARY KEY AUTOINCREMENT",
        "ScoreId INTEGER",
        "Penalty INTEGER",
        "Description TEXT NOT NULL",
        "Referee TEXT",
        "FOREIGN KEY(ScoreId) REFERENCES Scores(Id) ON DELETE CASCADE",
    ],
